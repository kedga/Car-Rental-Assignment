@page "/"
@using Car_Rental.Common.Interfaces
@using Car_Rental.Common.Enums
@using Car_Rental.Common.Classes
@using Car_Rental.Common.Utilities
@using System.Text.Json;
@using Car_Rental.Business.Classes
@using System.Text.RegularExpressions

@inject IJSRuntime JSRuntime
@inject HttpClient Http
@inject Car_Rental.Business.Classes.BookingProcessor bp

<div class="container">
    @if (!string.IsNullOrEmpty(bp.GetErrorMessage()))
    {
        <div class="position-fixed top-2 start-50 translate-middle-x">
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                @bp.GetErrorMessage()
                <button type="button" class="btn-close" data-dismiss="alert" aria-label="Close" @onclick="() => bp.ClearErrorMessage()"></button>
            </div>
        </div>
    }
</div>

<div class="d-flex align-items-baseline">
    <h1 class="me-3">Car Rental</h1>
    <div class="btn-group" role="group" aria-label="Toggle Link">
        <a href="#" class="@(bp.AddBooking.IsProcessing ? "text-warning" : bp.AddBooking.UseDelay ? "text-primary" : "text-black-50")" @onclick="bp.AddBooking.ToggleUseDelay">@(bp.AddBooking.UseDelay ? "Booking delay active" : "Booking delay inactive")</a>
    </div>
</div>

<div class="mb-5"></div>
<h4>Vehicles</h4>
<Vehicles />
<div class="mb-5"></div>
<h4>Bookings</h4>
<Bookings />
<div class="mb-5"></div>
<h4>Customers</h4>
<Customers />
<div class="mb-5"></div>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender) 
        {
            await bp.InitializeAsync();
            bp.DataChanged += HandleStateChanged;
        }
        await JSRuntime.InvokeVoidAsync("reinitializePopovers");
    }
    private void HandleStateChanged()
    {
        StateHasChanged();
    }
}